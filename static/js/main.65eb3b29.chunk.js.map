{"version":3,"sources":["Context/Context.js","components/Todo.js","components/TodoList.js","components/TodoForm.js","App.js","index.js"],"names":["reducer","state","action","type","todos","payload","State","todo","completed","id","uuidv4","error","loading","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","a","err","console","log","newTodos","filter","Provider","value","deleteTodo","deleteAll","updateTodo","addTodo","Todo","useContext","useState","setCompleted","className","onChange","checked","onClick","TodoList","map","TodoForm","text","setText","onSubmit","e","preventDefault","newTodo","placeholder","required","target","onFocus","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65eb3b29.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// import axios from 'axios';\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload],\r\n      };\r\n    case 'UPDATE_TODO':\r\n      return {};\r\n    case 'DELETE_TODO':\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n      };\r\n    case 'DELETE_ALL_TODO':\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Global state\r\nconst State = {\r\n  todos: [{ todo: 'add todo', completed: false, id: uuidv4() }],\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\n// context\r\n\r\nexport const GlobalContext = createContext(State);\r\n\r\n// Provider\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, State);\r\n\r\n  // Action\r\n\r\n  async function addTodo(todo) {\r\n    try {\r\n      dispatch({\r\n        type: 'ADD_TODO',\r\n        payload: todo,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async function updateTodo(id) {}\r\n\r\n  async function deleteTodo(id) {\r\n    const newTodos = state.todos.filter((todo) => todo.id !== id);\r\n\r\n    try {\r\n      dispatch({\r\n        type: 'DELETE_TODO',\r\n        payload: newTodos,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async function deleteAll() {\r\n    try {\r\n      dispatch({\r\n        type: 'DELETE_ALL_TODO',\r\n        payload: [],\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        todos: state.todos,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        deleteTodo,\r\n        deleteAll,\r\n        updateTodo,\r\n        addTodo,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport { GlobalContext } from '../Context/Context';\r\n\r\nexport default function Todo({ todo }) {\r\n  const { deleteTodo } = useContext(GlobalContext);\r\n\r\n  let [completed, setCompleted] = useState(todo.completed);\r\n\r\n  const checkboxChange = () => {\r\n    setCompleted((completed = !completed));\r\n  };\r\n\r\n  return (\r\n    <li className={completed ? 'done' : ''}>\r\n      {todo.todo}\r\n\r\n      <label className=\"form-switch\">\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={checkboxChange}\r\n          checked={completed ? 1 : 0}\r\n        />\r\n        <i></i>\r\n      </label>\r\n\r\n      <button onClick={() => deleteTodo(todo.id)} className=\"delete-btn\">\r\n        <i className=\"far fa-trash-alt\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport Todo from './Todo';\r\n\r\nimport { GlobalContext } from '../Context/Context';\r\n\r\nconst TodoList = () => {\r\n  const { todos } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <ul className=\"list\">\r\n      {todos.map((todo) => (\r\n        <Todo todo={todo} key={todo.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useContext, useState } from 'react';\r\nimport { GlobalContext } from '../Context/Context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function TodoForm() {\r\n  const [text, setText] = useState('');\r\n\r\n  const { addTodo, deleteAll } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTodo = {\r\n      id: uuidv4(),\r\n      todo: text,\r\n      completed: false,\r\n    };\r\n\r\n    addTodo(newTodo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new work</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter text...\"\r\n            required\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            onFocus={(e) => setText('')}\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add</button>\r\n      </form>\r\n      <button className=\"btn dlt-all\" onClick={deleteAll}>\r\n        Delete All Todo/s\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\n\nimport { GlobalProvider } from './Context/Context';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"container my-3\">\n        <h1 className=\"text-center text-primary text-bold mb-3\">\n          ToDo:Track your work\n        </h1>\n        <TodoList />\n        <TodoForm />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}